{"ast":null,"code":"var _jsxFileName = \"/Users/liv/API Project/movie-recommendation-spa/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './index.css'; // Import the CSS file\nimport MovieForm from './MovieForm';\nimport MovieList from './MovieList';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [recommendedMovies, setRecommendedMovies] = useState([]);\n  const getMovieRecommendations = userPreferences => {\n    // Call your API here to get movie recommendations\n    axios.get(`http://localhost:8080/api/api/recommendations?userPreferences=${userPreferences}`).then(response => {\n      setRecommendedMovies(response.data);\n    }).catch(error => {\n      console.error('Error fetching movie recommendations:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movie Recommendation SPA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieForm, {\n      onSubmit: getMovieRecommendations\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n      recommendedMovies: recommendedMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"RA6jvd9CppmVWsIae+/eC0L18Xs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MovieForm","MovieList","axios","jsxDEV","_jsxDEV","App","_s","recommendedMovies","setRecommendedMovies","getMovieRecommendations","userPreferences","get","then","response","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["/Users/liv/API Project/movie-recommendation-spa/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './index.css'; // Import the CSS file\nimport MovieForm from './MovieForm';\nimport MovieList from './MovieList';\nimport axios from 'axios';\n\nconst App = () => {\n  const [recommendedMovies, setRecommendedMovies] = useState([]);\n\n  const getMovieRecommendations = (userPreferences) => {\n    // Call your API here to get movie recommendations\n    axios.get(`http://localhost:8080/api/api/recommendations?userPreferences=${userPreferences}`)\n      .then((response) => {\n        setRecommendedMovies(response.data);\n      })\n      .catch((error) => {\n        console.error('Error fetching movie recommendations:', error);\n      });\n  };\n\n  return (\n    <div>\n      <h1>Movie Recommendation SPA</h1>\n      <MovieForm onSubmit={getMovieRecommendations} />\n      <MovieList recommendedMovies={recommendedMovies} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa,CAAC,CAAC;AACtB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9D,MAAMU,uBAAuB,GAAIC,eAAe,IAAK;IACnD;IACAR,KAAK,CAACS,GAAG,CAAE,iEAAgED,eAAgB,EAAC,CAAC,CAC1FE,IAAI,CAAEC,QAAQ,IAAK;MAClBL,oBAAoB,CAACK,QAAQ,CAACC,IAAI,CAAC;IACrC,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC/D,CAAC,CAAC;EACN,CAAC;EAED,oBACEZ,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjClB,OAAA,CAACJ,SAAS;MAACuB,QAAQ,EAAEd;IAAwB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChDlB,OAAA,CAACH,SAAS;MAACM,iBAAiB,EAAEA;IAAkB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV,CAAC;AAAChB,EAAA,CArBID,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAuBT,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}